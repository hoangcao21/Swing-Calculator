/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import java.awt.Color;
import java.math.BigDecimal;

/**
 *
 * @author Hoang Cao
 */
public class CalculateFrame extends javax.swing.JFrame {

    /**
     * Creates new form CalculateFrame
     */
    CalculatorUtil helper;
    String num1 = null;
    String num2 = null;
    String oper = null;

    public CalculateFrame() {
        initComponents();
        helper = new CalculatorUtil();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnMc = new javax.swing.JButton();
        btnMr = new javax.swing.JButton();
        btnMp = new javax.swing.JButton();
        btnMs = new javax.swing.JButton();
        btnSqrt = new javax.swing.JButton();
        btn7 = new javax.swing.JButton();
        btn8 = new javax.swing.JButton();
        btn9 = new javax.swing.JButton();
        btnDivide = new javax.swing.JButton();
        btnPercent = new javax.swing.JButton();
        btn4 = new javax.swing.JButton();
        btn5 = new javax.swing.JButton();
        btn6 = new javax.swing.JButton();
        btnMultiply = new javax.swing.JButton();
        btn1divx = new javax.swing.JButton();
        btn1 = new javax.swing.JButton();
        btn2 = new javax.swing.JButton();
        btn3 = new javax.swing.JButton();
        btnSubstract = new javax.swing.JButton();
        btn0 = new javax.swing.JButton();
        btnDot = new javax.swing.JButton();
        btnPosneg = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnEqual = new javax.swing.JButton();
        txtDisplay = new javax.swing.JTextField();
        btnBackspace = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Calculator");
        setResizable(false);

        btnMc.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnMc.setText("MC");
        btnMc.setBackground(Color.GREEN);
        btnMc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMcActionPerformed(evt);
            }
        });

        btnMr.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnMr.setText("MR");
        btnMr.setToolTipText("");
        btnMr.setBackground(Color.GREEN);
        btnMr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMrActionPerformed(evt);
            }
        });

        btnMp.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnMp.setText("M+");
        btnMp.setBackground(Color.GREEN);
        btnMp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMpActionPerformed(evt);
            }
        });

        btnMs.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnMs.setText("M-");
        btnMs.setBackground(Color.GREEN);
        btnMs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMsActionPerformed(evt);
            }
        });

        btnSqrt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSqrt.setText("Sqrt");
        btnSqrt.setBackground(Color.GREEN);
        btnSqrt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSqrtActionPerformed(evt);
            }
        });

        btn7.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btn7.setText("7");
        btn7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn7ActionPerformed(evt);
            }
        });

        btn8.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btn8.setText("8");
        btn8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn8ActionPerformed(evt);
            }
        });

        btn9.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btn9.setText("9");
        btn9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn9ActionPerformed(evt);
            }
        });

        btnDivide.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnDivide.setText("/");
        btnDivide.setBackground(Color.GREEN);
        btnDivide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDivideActionPerformed(evt);
            }
        });

        btnPercent.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnPercent.setText("%");
        btnPercent.setBackground(Color.GREEN);
        btnPercent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPercentActionPerformed(evt);
            }
        });

        btn4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btn4.setText("4");
        btn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4ActionPerformed(evt);
            }
        });

        btn5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btn5.setText("5");
        btn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn5ActionPerformed(evt);
            }
        });

        btn6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btn6.setText("6");
        btn6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn6ActionPerformed(evt);
            }
        });

        btnMultiply.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnMultiply.setText("x");
        btnMultiply.setBackground(Color.GREEN);
        btnMultiply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMultiplyActionPerformed(evt);
            }
        });

        btn1divx.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btn1divx.setText("1/x");
        btn1divx.setBackground(Color.GREEN);
        btn1divx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1divxActionPerformed(evt);
            }
        });

        btn1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btn1.setText("1");
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });

        btn2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btn2.setText("2");
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });

        btn3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btn3.setText("3");
        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3ActionPerformed(evt);
            }
        });

        btnSubstract.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnSubstract.setText("-");
        btnSubstract.setBackground(Color.GREEN);
        btnSubstract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubstractActionPerformed(evt);
            }
        });

        btn0.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btn0.setText("0");
        btn0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn0ActionPerformed(evt);
            }
        });

        btnDot.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnDot.setText(".");
        btnDot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDotActionPerformed(evt);
            }
        });

        btnPosneg.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnPosneg.setText("+/-");
        btnPosneg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPosnegActionPerformed(evt);
            }
        });

        btnAdd.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnAdd.setText("+");
        btnAdd.setBackground(Color.GREEN);
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnEqual.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnEqual.setText("=");
        btnEqual.setBackground(Color.GREEN);
        btnEqual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEqualActionPerformed(evt);
            }
        });

        txtDisplay.setEditable(false);
        txtDisplay.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        txtDisplay.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtDisplay.setText("0");

        btnBackspace.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnBackspace.setText("BACKSPACE");
        btnBackspace.setBackground(Color.RED);
        btnBackspace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackspaceActionPerformed(evt);
            }
        });

        btnReset.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnReset.setText("RESET");
        btnReset.setBackground(Color.BLUE);
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDisplay)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn7, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn8, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn9, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDivide, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnPercent, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn5, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn6, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnMultiply, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn1divx, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnSubstract, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btn0, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnDot, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnPosneg, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEqual, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnMc, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnMr, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnMp, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(btnReset))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnMs, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnSqrt, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(btnBackspace, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBackspace, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(btnReset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnMc, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnMr, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnMp, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnMs, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnSqrt, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn7, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn8, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn9, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDivide, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPercent, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn5, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn6, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnMultiply, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn1divx, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnSubstract, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btn0, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnDot, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnPosneg, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnEqual, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn0ActionPerformed
        handleNumber("0");
    }//GEN-LAST:event_btn0ActionPerformed

    int starter = 0;
    private void btnDotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDotActionPerformed

        if (equalOn == 1) {
            num1 = "0" + ".";
            System.out.println("num1 = " + num1);
            txtDisplay.setText(num1);
            equalOn = 0;
            return;
        }

        if (num1 != null && num2 == null && equalOn == 0) {
            if (num1.matches("^-?\\d+$")) {
                num1 = num1 + ".";
                System.out.println("num1 = " + num1);
                txtDisplay.setText(num1);
                starter = 1;

                equalOn = 0;
            }
        } else if (num1 != null && num2 != null && equalOn == 0) {
            if (num2.matches("^-?\\d+$")) {
                num2 = num2 + ".";
                System.out.println("num2 = " + num2);
                txtDisplay.setText(num2);
                starter = 1;
            }
        }

        if (txtDisplay.getText().equals("0") && starter == 0) {
            num1 = "0" + ".";
            System.out.println("num1 = " + num1);
            txtDisplay.setText(num1);
            starter = 1;
        }
    }//GEN-LAST:event_btnDotActionPerformed

    int nextToNum2 = 0;
    private void btnPosnegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPosnegActionPerformed
        if (num1 != null) {
            if (num1.equals("0")) {
                return;
            }
        }

        if (num2 != null) {
            if (num2.equals("0")) {
                return;
            }
        }

        if (num1 != null && num2 != null && nextToNum2 == 1 && num2.matches("^-?\\d+(\\.\\d+)?$")) {
            num2 = (Double.valueOf(num2) * (-1)) + "";
            num2 = helper.checkDotZero(num2);
            num2 = new BigDecimal(num2).toPlainString();
            System.out.println("Check pos/neg num2 = " + num2);
            txtDisplay.setText(num2);
        } else if (num1 != null && num2 != null && nextToNum2 == 0 && num2.matches("^-?\\d+(\\.\\d+)?$")) {
            num2 = (Double.valueOf(num2) * (-1)) + "";
            num2 = helper.checkDotZero(num2);
            num2 = new BigDecimal(num2).toPlainString();
            System.out.println("Check pos/neg num2 = " + num2);
            txtDisplay.setText(num2);
        } else if (num1 != null && num2 == null && nextToNum2 == 0 && num1.matches("^-?\\d+(\\.\\d+)?$")) {
            num1 = (Double.valueOf(num1) * (-1)) + "";
            num1 = helper.checkDotZero(num1);
            num1 = new BigDecimal(num1).toPlainString();
            System.out.println("Check pos/neg num1 = " + num1);
            txtDisplay.setText(num1);
        } else if (num1 != null && num2 == null && nextToNum2 == 1 && num1.matches("^-?\\d+(\\.\\d+)?$")) {
            num1 = (Double.valueOf(num1) * (-1)) + "";
            num1 = helper.checkDotZero(num1);
            num1 = new BigDecimal(num1).toPlainString();
            System.out.println("Check pos/neg num1 = " + num1);
            txtDisplay.setText(num1);
        }
    }//GEN-LAST:event_btnPosnegActionPerformed

    private void doPosnegStuff(String num) {
        num = (Double.valueOf(num) * (-1)) + "";
        num = helper.checkDotZero(num);
        num = new BigDecimal(num).toPlainString();
        System.out.println("Check pos/neg num = " + num);
        txtDisplay.setText(num);
    }

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        handleOperation("+");
    }//GEN-LAST:event_btnAddActionPerformed

    int equalOn = 0;
    private void btnEqualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEqualActionPerformed
        if (num2 != null) {
            if (num2.equals("Infinity")) {
                infinity = 1;
                System.out.println("Infinity. Cannot calculate.");
                return;
            }
        }

        if (num1 != null && num2 != null && infinity == 0) {
            System.out.println("Check oper = " + lastOper);
            System.out.println("Equal: (num1 = " + num1 + ", num2 = " + num2 + ")");
            num1 = helper.doCalculation(num1, lastOper, num2);
            System.out.println("Result = " + num1);

            num2 = null;
            oper = null;
            txtDisplay.setText(num1);
            nextToNum2 = 0;
            zeroNum = 0;

            // New added
            lastOper = null;
            equalOn = 1;
            onedivxOn = 0;
            sqrtOn = 0;
            percentOn = 0;
            mrOn = 0;
        } else if (num1 != null) {
            System.out.println("Equal clicked, only num1 exists");
            num1 = null;
            num2 = null;
            oper = null;
            nextToNum2 = 0;
            zeroNum = 0;

            // New added
            lastOper = null;
            equalOn = 1;
            onedivxOn = 0;
            sqrtOn = 0;
            percentOn = 0;
            mrOn = 0;
        }
    }//GEN-LAST:event_btnEqualActionPerformed

    private void btnSubstractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubstractActionPerformed
        handleOperation("-");
    }//GEN-LAST:event_btnSubstractActionPerformed

    private void btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3ActionPerformed
        handleNumber("3");
    }//GEN-LAST:event_btn3ActionPerformed

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed
        handleNumber("2");
    }//GEN-LAST:event_btn2ActionPerformed

    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1ActionPerformed
        handleNumber("1");
    }//GEN-LAST:event_btn1ActionPerformed

    private void btn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn4ActionPerformed
        handleNumber("4");
    }//GEN-LAST:event_btn4ActionPerformed

    private void btn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn5ActionPerformed
        handleNumber("5");
    }//GEN-LAST:event_btn5ActionPerformed

    private void btn6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn6ActionPerformed
        handleNumber("6");
    }//GEN-LAST:event_btn6ActionPerformed

    private void btnMultiplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMultiplyActionPerformed
        handleOperation("x");
    }//GEN-LAST:event_btnMultiplyActionPerformed

    int onedivxOn = 0;
    private void btn1divxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1divxActionPerformed
        if (num1 != null && num2 == null && num1.matches("^-?\\d+(\\.\\d+)?$")) {
            num1 = (1 / Double.valueOf(num1)) + "";
            num1 = helper.checkDotZero(num1);
            String big = num1;
            if (!num1.equals("Infinity")) {
                big = new BigDecimal(num1).toPlainString();
            }

            txtDisplay.setText(big);
            System.out.println("num1 = " + big);

            onedivxOn = 1;
        } else if (num1 != null && num2 != null && num2.matches("^-?\\d+(\\.\\d+)?$")) {
            num2 = (1 / Double.valueOf(num2)) + "";
            num2 = helper.checkDotZero(num2);
            String big = num2;
            if (!num2.equals("Infinity")) {
                big = new BigDecimal(num2).toPlainString();
            }

            txtDisplay.setText(big);
            System.out.println("num2 = " + big);

            onedivxOn = 1;
        }
    }//GEN-LAST:event_btn1divxActionPerformed

    int percentOn = 0;
    private void btnPercentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPercentActionPerformed
        if (num1 != null && num2 == null && num1.matches("^-?\\d+(\\.\\d+)?$")) {
            num1 = (Double.valueOf(num1) / 100) + "";
            num1 = helper.checkDotZero(num1);
            String big = new BigDecimal(num1).toPlainString();
            txtDisplay.setText(big);
            System.out.println("num1 = " + big);

            percentOn = 1;
        } else if (num1 != null && num2 != null && num2.matches("^-?\\d+(\\.\\d+)?$")) {
            num2 = (Double.valueOf(num2) / 100) + "";
            num2 = helper.checkDotZero(num2);
            String big = new BigDecimal(num2).toPlainString();
            txtDisplay.setText(big);
            System.out.println("num2 = " + big);

            percentOn = 1;
        }
    }//GEN-LAST:event_btnPercentActionPerformed

    private void btnDivideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDivideActionPerformed
        handleOperation("/");
    }//GEN-LAST:event_btnDivideActionPerformed

    private void btn9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn9ActionPerformed
        handleNumber("9");
    }//GEN-LAST:event_btn9ActionPerformed

    private void btn8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn8ActionPerformed
        handleNumber("8");
    }//GEN-LAST:event_btn8ActionPerformed

    private void btn7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn7ActionPerformed
        handleNumber("7");
    }//GEN-LAST:event_btn7ActionPerformed

    int zeroNum = 0;

    int infinity = 0;

    private void handleNumber(String num) {
        if (num1 != null) {
            if (num1.equals("ERROR")) {
                num1 = num;
                txtDisplay.setText(num1);
                System.out.println("num1 = " + num1);
                return;
            }
        }

        if (num1 != null) {
            if (num1.equals("Infinity")) {
                System.out.println("Infinity. Not append.");
                return;
            }
        }

        if (num2 != null) {
            if (num2.equals("Infinity")) {
                System.out.println("Infinity. Not append.");
                infinity = 1;
                return;
            }
        }

        if (pheptoanM == 1) {
            if (num2 != null) {
                num2 = num;
                txtDisplay.setText(num2);
                System.out.println("pheptoanM: num2 = " + num2);
                pheptoanM = 0;
                return;
            }

            if (num1 != null) {
                num1 = num;
                txtDisplay.setText(num1);
                System.out.println("pheptoanM: num1 = " + num1);
                pheptoanM = 0;
                return;
            }
        }

        if (onedivxOn == 1) {
            if (num2 != null) {
                num2 = num;
                txtDisplay.setText(num2);
                System.out.println("1divx: num2 = " + num2);
                onedivxOn = 0;
                return;
            }

            if (num1 != null) {
                num1 = num;
                txtDisplay.setText(num1);
                System.out.println("1divx: num1 = " + num1);
                onedivxOn = 0;
                return;
            }
        }

        if (percentOn == 1) {
            if (num2 != null) {
                num2 = num;
                txtDisplay.setText(num2);
                System.out.println("percentOn: num2 = " + num2);
                percentOn = 0;
                return;
            }

            if (num1 != null) {
                num1 = num;
                txtDisplay.setText(num1);
                System.out.println("percentOn: num1 = " + num1);
                percentOn = 0;
                return;
            }
        }

        if (sqrtOn == 1) {
            if (num2 != null) {
                num2 = num;
                txtDisplay.setText(num2);
                System.out.println("sqrtOn: num2 = " + num2);
                sqrtOn = 0;
                return;
            }

            if (num1 != null) {
                num1 = num;
                txtDisplay.setText(num1);
                System.out.println("sqrtOn: num1 = " + num1);
                sqrtOn = 0;
                return;
            }
        }

        // FOR THE FIRST NUMBER - num1
        // If first digit is NOT ZERO, then append ZERO to the end
        if (num1 != null && num.equals("0") && !num1.equals("0") && oper == null && pheptoanM == 0) {
            num1 = num1 + num;
            System.out.println("num1 = " + num1);
            txtDisplay.setText(num1);
            return;
        } // If first digit is ZERO, new next number is ZERO, do NOTHING
        else if (num1 != null && num.equals("0") && num1.equals("0") && oper == null) {
            System.out.println("Block ZERO.");
            return;
        } // If first digit is ZERO, then replace by new number
        else if (num1 != null && num1.equals("0") && num2 == null && zeroNum == 0) {
            num1 = num;
            System.out.println("num1 = " + num1);
            txtDisplay.setText(num1);
            zeroNum = 1;
            return;
        }

        if (num1 == null) {
            num1 = num;
            equalOn = 0;
            System.out.println("num1 = " + num1);
            txtDisplay.setText(num);
        } else if (num1 != null && oper == null && pheptoanM == 0) {
            if (equalOn == 1) {
                num1 = num;
                txtDisplay.setText(num1);
                System.out.println("num1 with equalOn 1 = " + num1);
                equalOn = 0;
                return;
            }
            num1 = num1 + num;
            System.out.println("num1 = " + num1);
            txtDisplay.setText(num1);
        } else if (num2 == null && oper != null) {
            num2 = num;
            System.out.println("num2 = " + num2);
            txtDisplay.setText(num);
        } else if (num2 != null && oper != null && pheptoanM == 0) {
            if (num.equals("0") && num2.equals("0")) {
                System.out.println("Block ZERO for num2.");
                return;
            } else if (!num.equals("0") && num2.equals("0")) {
                num2 = num;
                txtDisplay.setText(num2);
                System.out.println("num2 = " + num2);
                return;
            }

            num2 = num2 + num;
            System.out.println("num2 = " + num2);
            txtDisplay.setText(num2);
        }
    }

    String lastOper = "";
    String mem = "0";

    int pheptoanM = 0;

    private void handleOperation(String operParam) {
        String temp = operParam;

        if (txtDisplay.getText().equals("0") && num1 != null) {
            num1 = "0";

            System.out.println("num1 = " + num1);
            if (temp.equals("M+") || temp.equals("M-")) {
                oper = null;
                return;
            }

            oper = temp;
            zeroNum = 1;
            System.out.println("Oper = " + temp);

            return;
        }

        // Only allow to do calculations if the number is in this format: 2000.012
        if (oper == null && num1 != null && num1.matches("^-?\\d+(\\.\\d+)?$")) {
            oper = temp;
            lastOper = oper;
            nextToNum2 = 1;

            sqrtOn = 0;
            percentOn = 0;
            onedivxOn = 0;
            mrOn = 0;

            pheptoanM = 0;;

            System.out.println("Oper = " + temp);

            if (oper.equals("M+")) {
                mem = (Double.valueOf(mem) + Double.valueOf(num1)) + "";
                System.out.println("Value in memory = " + mem);
                oper = null;

                pheptoanM = 1;

                nextToNum2 = 0;
            } else if (oper.equals("M-")) {
                mem = (Double.valueOf(mem) - Double.valueOf(num1)) + "";
                System.out.println("Value in memory = " + mem);
                oper = null;

                pheptoanM = 1;

                nextToNum2 = 0;
            }
            // Replace oper after num1 inserted
        } else if (oper != null && num2 == null && num1 != null && num1.matches("^-?\\d+(\\.\\d+)?$")) {
            oper = temp;

            if (!temp.equals("M+") && !temp.equals("M-")) {
                // Save the last oper
                lastOper = temp;
            }

            System.out.println("Oper = " + lastOper);

            if (oper.equals("M+")) {
                mem = (Double.valueOf(mem) + Double.valueOf(num1)) + "";
                System.out.println("Value in memory = " + mem);
                oper = lastOper;

                pheptoanM = 1;
            } else if (oper.equals("M-")) {
                mem = (Double.valueOf(mem) - Double.valueOf(num1)) + "";
                System.out.println("Value in memory = " + mem);
                oper = lastOper;

                pheptoanM = 1;
            }
        } else if (oper != null && num2 != null && num1 != null && num2.matches("^-?\\d+(\\.\\d+)?$") && num1.matches("^-?\\d+(\\.\\d+)?$")) {
            oper = temp;
            System.out.println("New oper = " + oper);
            if (oper.equals("M+")) {
                mem = (Double.valueOf(mem) + Double.valueOf(num2)) + "";
                System.out.println("Value in memory = " + mem);

                pheptoanM = 1;
                return;
            } else if (oper.equals("M-")) {
                mem = (Double.valueOf(mem) - Double.valueOf(num2)) + "";
                System.out.println("Value in memory = " + mem);

                pheptoanM = 1;
                return;
            }

            System.out.println("Last oper = " + lastOper);
            String result = helper.doCalculation(num1, lastOper, num2);
            txtDisplay.setText(result);
            System.out.println("Result = " + result);

            lastOper = oper;

            num1 = result;
            num2 = null;
            nextToNum2 = 0;
            zeroNum = 0;

            sqrtOn = 0;
            percentOn = 0;
            onedivxOn = 0;

            nextToNum2 = 1;
        }

    }

    int sqrtOn = 0;
    private void btnSqrtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSqrtActionPerformed

        if (num1 != null) {
            if (num1.matches("^-\\d+(\\.\\d+)?$")) {
                txtDisplay.setText("ERROR");
                System.out.println("SQRT negative number ERROR.");
                num1 = null;
                num2 = null;
                oper = null;
                return;
            }
        }

        if (num2 != null) {
            if (num2.matches("^-\\d+(\\.\\d+)?$")) {
                txtDisplay.setText("ERROR");
                System.out.println("SQRT negative number ERROR.");
                num1 = null;
                num2 = null;
                oper = null;
                return;
            }
        }

        if (num1 != null && num2 != null && nextToNum2 == 1 && num2.matches("^\\d+(\\.\\d+)?$")) {
            num2 = Math.sqrt(Double.valueOf(num2)) + "";
            num2 = helper.checkDotZero(num2);
            String big = new BigDecimal(num2).toPlainString();
            txtDisplay.setText(big);
            System.out.println("Check SQRT num2 = " + big);

            sqrtOn = 1;
        } else if (num1 != null && num2 == null && nextToNum2 == 0 && num1.matches("^\\d+(\\.\\d+)?$")) {
            num1 = Math.sqrt(Double.valueOf(num1)) + "";
            num1 = helper.checkDotZero(num1);
            String big = new BigDecimal(num1).toPlainString();
            txtDisplay.setText(big);
            System.out.println("Check SQRT num1 = " + big);

            sqrtOn = 1;
        }
    }//GEN-LAST:event_btnSqrtActionPerformed

    private void btnMsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMsActionPerformed
        handleOperation("M-");
    }//GEN-LAST:event_btnMsActionPerformed

    private void btnMpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMpActionPerformed
        handleOperation("M+");
    }//GEN-LAST:event_btnMpActionPerformed

    int mrOn = 0;
    private void btnMrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMrActionPerformed
        if (num1 != null && num2 == null && oper == null) {
            num1 = helper.checkDotZero(mem);
            System.out.println("num1 = " + num1);
            txtDisplay.setText(num1);
            mrOn = 1;
        } else if (num1 != null && num2 != null && oper != null) {
            num2 = helper.checkDotZero(mem);
            System.out.println("num2 = " + num2);
            txtDisplay.setText(num2);
            mrOn = 1;
        } else if (num1 != null && num2 == null && oper != null) {
            num2 = helper.checkDotZero(mem);
            System.out.println("num2 = " + num2);
            txtDisplay.setText(num2);
            mrOn = 1;
        }
    }//GEN-LAST:event_btnMrActionPerformed

    private void btnMcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMcActionPerformed
        mem = "0";
        System.out.println("Value in memory = " + mem);
    }//GEN-LAST:event_btnMcActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        num1 = null;
        num2 = null;
        oper = null;
        zeroNum = 0;
        nextToNum2 = 0;
        mem = "0";
        starter = 0;

        equalOn = 0;
        onedivxOn = 0;
        percentOn = 0;
        sqrtOn = 0;
        infinity = 0;

        // New added
        pheptoanM = 0;

        txtDisplay.setText("0");
        System.out.println("Reset.");
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnBackspaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackspaceActionPerformed
        if (num1 != null && num2 == null && oper == null && equalOn == 0 && sqrtOn == 0 && percentOn == 0 && onedivxOn == 0 && mrOn == 0 && pheptoanM == 0) {
            if (num1.charAt(0) == '-' && num1.length() == 2) {
                num1 = "0";
                zeroNum = 0;
                System.out.println("num1 = " + num1);
                txtDisplay.setText(num1);
                return;
            }

            if (num1.length() == 1) {
                num1 = "0";
                zeroNum = 0;
                System.out.println("num1 = " + num1);
                txtDisplay.setText(num1);
                return;
            }
            num1 = num1.substring(0, num1.length() - 1);
            System.out.println("num1 = " + num1);
            txtDisplay.setText(num1);
        } else if (num1 != null && num2 != null && oper != null && equalOn == 0 && sqrtOn == 0 && percentOn == 0 && onedivxOn == 0 && mrOn == 0 && pheptoanM == 0) {
            if (num2.charAt(0) == '-' && num2.length() == 2) {
                num2 = "0";
                zeroNum = 0;
                System.out.println("num2 = " + num2);
                txtDisplay.setText(num2);
                return;
            }

            if (num2.length() == 1) {
                num2 = "0";
                zeroNum = 0;
                System.out.println("num2 = " + num2);
                txtDisplay.setText(num2);
                return;
            }

            num2 = num2.substring(0, num2.length() - 1);
            System.out.println("num2 = " + num2);
            txtDisplay.setText(num2);
        }
    }//GEN-LAST:event_btnBackspaceActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CalculateFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CalculateFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CalculateFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CalculateFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CalculateFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn0;
    private javax.swing.JButton btn1;
    private javax.swing.JButton btn1divx;
    private javax.swing.JButton btn2;
    private javax.swing.JButton btn3;
    private javax.swing.JButton btn4;
    private javax.swing.JButton btn5;
    private javax.swing.JButton btn6;
    private javax.swing.JButton btn7;
    private javax.swing.JButton btn8;
    private javax.swing.JButton btn9;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBackspace;
    private javax.swing.JButton btnDivide;
    private javax.swing.JButton btnDot;
    private javax.swing.JButton btnEqual;
    private javax.swing.JButton btnMc;
    private javax.swing.JButton btnMp;
    private javax.swing.JButton btnMr;
    private javax.swing.JButton btnMs;
    private javax.swing.JButton btnMultiply;
    private javax.swing.JButton btnPercent;
    private javax.swing.JButton btnPosneg;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSqrt;
    private javax.swing.JButton btnSubstract;
    private javax.swing.JTextField txtDisplay;
    // End of variables declaration//GEN-END:variables
}
